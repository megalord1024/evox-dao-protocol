/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISabiler,
  ISabilerInterface,
} from "../../../../contracts/interface/ISablier.sol/ISabiler";

const _abi = [
  {
    inputs: [],
    name: "calculateFinalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getSablierAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "gettotalamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "handleOverflowVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISabiler__factory {
  static readonly abi = _abi;
  static createInterface(): ISabilerInterface {
    return new Interface(_abi) as ISabilerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ISabiler {
    return new Contract(address, _abi, runner) as unknown as ISabiler;
  }
}
