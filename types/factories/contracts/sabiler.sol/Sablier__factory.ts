/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Sablier,
  SablierInterface,
} from "../../../contracts/sabiler.sol/Sablier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sablierV2LockupAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_streamID",
        type: "uint256[]",
      },
    ],
    name: "addStreamID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getSablierAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getstreamID",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sablierV2Lockup",
    outputs: [
      {
        internalType: "contract ISablierV2Lockup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "streamID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "updateSablierV2Lockup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161090338038061090383398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b6107f0806101136000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638f312a36116100665780638f312a3614610103578063923e05be14610116578063a098c34714610129578063c198173c1461013c578063f2fde38b1461015d57600080fd5b80633328bcfc14610098578063715018a6146100c85780638b5e13fe146100d25780638da5cb5b146100f2575b600080fd5b6001546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d0610170565b005b6100e56100e0366004610622565b610184565b6040516100bf9190610644565b6000546001600160a01b03166100ab565b6100e5610111366004610622565b610298565b6100d0610124366004610622565b610304565b6100d0610137366004610688565b61032e565b61014f61014a36600461070e565b610357565b6040519081526020016100bf565b6100d061016b366004610622565b610388565b6101786103cb565b61018260006103f8565b565b6060600061019183610298565b90506000815167ffffffffffffffff8111156101af576101af610738565b6040519080825280602002602001820160405280156101d8578160200160208202803683370190505b5090506001825111156102505760005b82518110156102485760008382815181106102055761020561074e565b6020026020010151905061021881610448565b83838151811061022a5761022a61074e565b602090810291909101015250806102408161077a565b9150506101e8565b509392505050565b610273826000815181106102665761026661074e565b6020026020010151610448565b816000815181106102865761028661074e565b60209081029190910101529392505050565b6001600160a01b0381166000908152600260209081526040918290208054835181840281018401909452808452606093928301828280156102f857602002820191906000526020600020905b8154815260200190600101908083116102e4575b50505050509050919050565b61030c6103cb565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03831660009081526002602052604090206103519083836105a6565b50505050565b6002602052816000526040600020818154811061037357600080fd5b90600052602060002001600091509150505481565b6103906103cb565b6001600160a01b0381166103bf57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103c8816103f8565b50565b6000546001600160a01b031633146101825760405163118cdaa760e01b81523360048201526024016103b6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600154604051634869e12d60e01b81526004810183905260009182916001600160a01b0390911690634869e12d90602401602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190610793565b60015460405163a80fc07160e01b8152600481018690529192506000916001600160a01b039091169063a80fc07190602401602060405180830381865afa158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d9190610793565b9050806001600160801b0316826001600160801b031611156105885760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642073747265616d20737461746560601b60448201526064016103b6565b600061059483836107bc565b6001600160801b031695945050505050565b8280548282559060005260206000209081019282156105e1579160200282015b828111156105e15782358255916020019190600101906105c6565b506105ed9291506105f1565b5090565b5b808211156105ed57600081556001016105f2565b80356001600160a01b038116811461061d57600080fd5b919050565b60006020828403121561063457600080fd5b61063d82610606565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561067c57835183529284019291840191600101610660565b50909695505050505050565b60008060006040848603121561069d57600080fd5b6106a684610606565b9250602084013567ffffffffffffffff808211156106c357600080fd5b818601915086601f8301126106d757600080fd5b8135818111156106e657600080fd5b8760208260051b85010111156106fb57600080fd5b6020830194508093505050509250925092565b6000806040838503121561072157600080fd5b61072a83610606565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161078c5761078c610764565b5060010190565b6000602082840312156107a557600080fd5b81516001600160801b038116811461063d57600080fd5b6001600160801b038281168282160390808211156107dc576107dc610764565b509291505056fea164736f6c6343000814000a";

type SablierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SablierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sablier__factory extends ContractFactory {
  constructor(...args: SablierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sablierV2LockupAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_sablierV2LockupAddress, overrides || {});
  }
  override deploy(
    _sablierV2LockupAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_sablierV2LockupAddress, overrides || {}) as Promise<
      Sablier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Sablier__factory {
    return super.connect(runner) as Sablier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SablierInterface {
    return new Interface(_abi) as SablierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sablier {
    return new Contract(address, _abi, runner) as unknown as Sablier;
  }
}
