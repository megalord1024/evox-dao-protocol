/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Sablier,
  SablierInterface,
} from "../../../contracts/sabiler.sol/Sablier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sablierV2LockupAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "User_withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_streamID",
        type: "uint256[]",
      },
    ],
    name: "addStreamID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateOverflowVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateFinalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "calculateFinalvotingPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getSablierAmount",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserdepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getstreamID",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "gettotalamount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "handleOverflowVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "overflowNovotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overflowYesvotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposal",
    outputs: [
      {
        internalType: "uint256",
        name: "yes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "no",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstain",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sablierV2Lockup",
    outputs: [
      {
        internalType: "contract ISablierV2Lockup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sabliertotalUserAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setvotingMarketCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "staked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "streamID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "timeofdeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "updateSablierV2Lockup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingMarketCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a764000060065534801561001c57600080fd5b506040516200135e3803806200135e83398101604081905261003d9161010a565b338061006357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006c8161009e565b50600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561013d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461010557600080fd5b919050565b6000806040838503121561011d57600080fd5b610126836100ee565b9150610134602084016100ee565b90509250929050565b611211806200014d6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063817b1cd21161010f578063c198173c116100a2578063f435f5a711610071578063f435f5a71461047c578063faa0b3dc1461048f578063fc0c546a14610498578063fd5e6dd1146104ab57600080fd5b8063c198173c14610430578063c47bf3c814610443578063ec7694ec14610460578063f2fde38b1461046957600080fd5b8063923e05be116100de578063923e05be146103e1578063929cb5d6146103f457806398807d84146103fd578063a098c3471461041d57600080fd5b8063817b1cd2146103945780638b5e13fe1461039d5780638da5cb5b146103bd5780638f312a36146103ce57600080fd5b806343e51928116101875780635a993f21116101565780635a993f211461031c5780636b665de21461033f578063715018a61461035f578063753ec1031461036757600080fd5b806343e51928146102ce57806347e7ef24146102d657806348d9acef146102e957806358c85dce1461030957600080fd5b80632f6c493c116101c35780632f6c493c146102625780633328bcfc14610285578063348d466e146102b05780633785cbdf146102c557600080fd5b8063166e09dd146101ea5780631e2dd599146102105780632c54e55e14610239575b600080fd5b6101fd6101f8366004610f66565b6104be565b6040519081526020015b60405180910390f35b6101fd61021e366004610f66565b6001600160a01b03166000908152600f602052604090205490565b6101fd610247366004610f66565b6001600160a01b03166000908152600a602052604090205490565b610275610270366004610f66565b6104f7565b6040519015158152602001610207565b600154610298906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6102c36102be366004610f88565b61055d565b005b6101fd60085481565b6102c361056a565b6102756102e4366004610fa1565b61063d565b6101fd6102f7366004610f66565b600d6020526000908152604090205481565b6102c3610317366004610f66565b6107e0565b61027561032a366004610f66565b60106020526000908152604090205460ff1681565b6101fd61034d366004610f66565b600f6020526000908152604090205481565b6102c36108c5565b60035460045460055461037992919083565b60408051938452602084019290925290820152606001610207565b6101fd600c5481565b6103b06103ab366004610f66565b6108d9565b6040516102079190610fcb565b6000546001600160a01b0316610298565b6103b06103dc366004610f66565b610a99565b6102c36103ef366004610f66565b610b05565b6101fd60095481565b6101fd61040b366004610f66565b600a6020526000908152604090205481565b6102c361042b36600461100f565b610b2f565b6101fd61043e366004610fa1565b610b52565b61044b610b83565b60408051928352602083019190915201610207565b6101fd60075481565b6102c3610477366004610f66565b610c46565b61027561048a366004610f66565b610c84565b6101fd60065481565b600254610298906001600160a01b031681565b6102986104b9366004610f88565b610ce5565b6001600160a01b0381166000908152600a6020908152604080832054600f90925282205460006104ee82846110ab565b95945050505050565b6001600160a01b0381166000908152600a602052604081205482906105375760405162461bcd60e51b815260040161052e906110be565b60405180910390fd5b50506001600160a01b03166000908152601060205260409020805460ff19169055600190565b610565610d0f565b600655565b336000818152600a60205260409020546105965760405162461bcd60e51b815260040161052e906110be565b336000908152600a60205260408120805490829055600c8054919283926105be9084906110e8565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063891906110fb565b505050565b600080821161068e5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161052e565b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070991906110fb565b506001600160a01b0383166000908152600a6020526040812054900361077557600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0383166000908152600a60205260408120805484929061079d9084906110ab565b9250508190555081600c60008282546107b691906110ab565b9091555050506001600160a01b0382166000908152600d6020526040902042905560015b92915050565b60006107eb826104be565b90506000600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610866919061111d565b90506000670de0b6b3a7640000826006546108819190611136565b61088b919061114d565b9050808311156108bf5760006108a182856110e8565b905081935080600960008282546108b891906110ab565b9091555050505b50505050565b6108cd610d0f565b6108d76000610d3c565b565b606060006108e683610a99565b90506000815167ffffffffffffffff8111156109045761090461116f565b60405190808252806020026020018201604052801561092d578160200160208202803683370190505b5090506001825111156109fb5760005b82518110156109f357600083828151811061095a5761095a611185565b6020026020010151905061096d81610d8c565b83838151811061097f5761097f611185565b60200260200101818152505082828151811061099d5761099d611185565b6020026020010151600f6000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109d991906110ab565b909155508291506109eb90508161119b565b91505061093d565b509392505050565b610a1e82600081518110610a1157610a11611185565b6020026020010151610d8c565b81600081518110610a3157610a31611185565b60200260200101818152505080600081518110610a5057610a50611185565b6020026020010151600f6000866001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a8c91906110ab565b9091555090949350505050565b6001600160a01b0381166000908152600e6020908152604091829020805483518184028101840190945280845260609392830182828015610af957602002820191906000526020600020905b815481526020019060010190808311610ae5575b50505050509050919050565b610b0d610d0f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166000908152600e602052604090206108bf908383610eea565b600e6020528160005260406000208181548110610b6e57600080fd5b90600052602060002001600091509150505481565b6003546004546000918291828183610ba381670de0b6b3a7640000611136565b610bad919061114d565b610bb791906110ab565b610bc990670de0b6b3a7640000611136565b905060095481610bd99190611136565b610beb90670de0b6b3a7640000611136565b6007819055600954610bfd91906110e8565b60085560075460038054600090610c159084906110ab565b909155505060085460048054600090610c2f9084906110ab565b909155505060035460045490969095509350505050565b610c4e610d0f565b6001600160a01b038116610c7857604051631e4fbdf760e01b81526000600482015260240161052e565b610c8181610d3c565b50565b6001600160a01b0381166000908152600a60205260408120548290610cbb5760405162461bcd60e51b815260040161052e906110be565b50506001600160a01b03166000908152601060205260409020805460ff1916600190811790915590565b600b8181548110610cf557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146108d75760405163118cdaa760e01b815233600482015260240161052e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600154604051634869e12d60e01b81526004810183905260009182916001600160a01b0390911690634869e12d90602401602060405180830381865afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe91906111b4565b60015460405163a80fc07160e01b8152600481018690529192506000916001600160a01b039091169063a80fc07190602401602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7191906111b4565b9050806001600160801b0316826001600160801b03161115610ecc5760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642073747265616d20737461746560601b604482015260640161052e565b6000610ed883836111dd565b6001600160801b031695945050505050565b828054828255906000526020600020908101928215610f25579160200282015b82811115610f25578235825591602001919060010190610f0a565b50610f31929150610f35565b5090565b5b80821115610f315760008155600101610f36565b80356001600160a01b0381168114610f6157600080fd5b919050565b600060208284031215610f7857600080fd5b610f8182610f4a565b9392505050565b600060208284031215610f9a57600080fd5b5035919050565b60008060408385031215610fb457600080fd5b610fbd83610f4a565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561100357835183529284019291840191600101610fe7565b50909695505050505050565b60008060006040848603121561102457600080fd5b61102d84610f4a565b9250602084013567ffffffffffffffff8082111561104a57600080fd5b818601915086601f83011261105e57600080fd5b81358181111561106d57600080fd5b8760208260051b850101111561108257600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156107da576107da611095565b60208082526010908201526f139bc81d1bdad95b9cc81cdd185ad95960821b604082015260600190565b818103818111156107da576107da611095565b60006020828403121561110d57600080fd5b81518015158114610f8157600080fd5b60006020828403121561112f57600080fd5b5051919050565b80820281158282048414176107da576107da611095565b60008261116a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016111ad576111ad611095565b5060010190565b6000602082840312156111c657600080fd5b81516001600160801b0381168114610f8157600080fd5b6001600160801b038281168282160390808211156111fd576111fd611095565b509291505056fea164736f6c6343000814000a";

type SablierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SablierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sablier__factory extends ContractFactory {
  constructor(...args: SablierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sablierV2LockupAddress: AddressLike,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _sablierV2LockupAddress,
      _token,
      overrides || {}
    );
  }
  override deploy(
    _sablierV2LockupAddress: AddressLike,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _sablierV2LockupAddress,
      _token,
      overrides || {}
    ) as Promise<
      Sablier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Sablier__factory {
    return super.connect(runner) as Sablier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SablierInterface {
    return new Interface(_abi) as SablierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sablier {
    return new Contract(address, _abi, runner) as unknown as Sablier;
  }
}
