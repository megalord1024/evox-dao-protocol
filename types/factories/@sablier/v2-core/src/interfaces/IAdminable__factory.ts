/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAdminable,
  IAdminableInterface,
} from "../../../../../@sablier/v2-core/src/interfaces/IAdminable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "TransferAdmin",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAdminable__factory {
  static readonly abi = _abi;
  static createInterface(): IAdminableInterface {
    return new Interface(_abi) as IAdminableInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IAdminable {
    return new Contract(address, _abi, runner) as unknown as IAdminable;
  }
}
